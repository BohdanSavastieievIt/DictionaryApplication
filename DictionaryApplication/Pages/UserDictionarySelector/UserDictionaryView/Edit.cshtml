@page
@model DictionaryApplication.Pages.UserDictionarySelector.UserDictionaryView.EditModel

@{
    ViewData["Title"] = "Edit Lexeme";
}

<h1>Edit lexeme</h1>

<h4>LexemePair</h4>
<hr />
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="mb-3">
                    <table>
                        <thead>
                            <tr>
                                <th class="col-md-3">Studied Lexeme (@Model.UserDictionary.StudiedLanguage.LangCode)</th>
                                <th class="col-md-3">Translations (@Model.UserDictionary.TranslationLanguage.LangCode)</th>
                                <th class="col-md-1"></th>
                            </tr>
                        </thead>
                        <tbody id="tbbody">
                            <tr class="my-2">
                                <td>
                                    <input asp-for="LexemeInput.Lexeme" class="form-control small-input" />
                                    <span asp-validation-for="LexemeInput.Lexeme" class="text-danger"></span>
                                </td>
                                <td>
                                    <input type="text" name="LexemeInput.Translations[0]" class="form-control small-input translations" value="@Model.LexemeInput.Translations[0]" required />
                                    <span class="text-danger field-validation-valid" data-valmsg-for="LexemeInput.Translations[0]" data-valmsg-replace="true"></span>
                                </td>
                                <td>
                                    <button type="button" class="big-btn add-translation">Add Translation</button>
                                </td>
                            </tr>
                            @for (int i = 1; i < Model.LexemeInput.Translations.Count; i++)
                            {
                                <tr>
                                    <td></td>
                                    <td>
                                        <input type="text" name="LexemeInput.Translations[@i]" class="form-control small-input translations" value="@Model.LexemeInput.Translations[i]" required />
                                        <span class="text-danger field-validation-valid" data-valmsg-for="LexemeInput.Translations[@i]" data-valmsg-replace="true"></span>
                                    </td>
                                    <td>
                                        <button type="button" class="big-btn remove-translation">Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="form-group mb-4">
                    <label asp-for="LexemeInput.Description" class="control-label">Description (Optional)</label>
                    <textarea asp-for="LexemeInput.Description" class="form-control autosize"></textarea>
                    <span asp-validation-for="LexemeInput.Description" class="text-danger"></span>
                </div>
                <div class="form-group text-center">
                    <input type="submit" value="Save" class="big-btn" />
                </div>
                <div class="text-center">
                    <a class="back-link" asp-page="./Index" asp-route-userDictionaryId="@Model.UserDictionary.Id">Back to List</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        document.addEventListener('DOMContentLoaded', function () {
            autosize(document.querySelectorAll('.autosize'));
        });

        $(document).ready(function () {
            var totalTranslations = @Model.LexemeInput.Translations.Count - 1;

            var validatorRules = {
                "LexemeInput.Lexeme": { required: true }
            };

            var validatorMessages = {
                "LexemeInput.Lexeme": { required: "The Studied Lexeme field is required." }
            };

            for (var i = 0; i < totalTranslations; i++) {
                validatorRules["LexemeInput.Translations[" + i + "]"] = { required: true };
                validatorMessages["LexemeInput.Translations[" + i + "]"] = { required: "The Translation field is required." };
            }

            var validator = $("form").validate({
                rules: validatorRules,
                messages: validatorMessages
            });

            var refreshIndexes = function () {
                $("#tbbody").find('tr').each(function (i, row) {
                    // skip the first row (headers)
                    if (i === 0) return;

                    var input = $(row).find("input.translations");
                    var span = $(row).find("span.field-validation-valid");

                    // should not happen, but better safe than sorry
                    if (input.length !== 1 || span.length !== 1) {
                        console.log("Error: unexpected number of inputs or spans in row");
                        return;
                    }

                    // decrement index since we skip the first row
                    var index = i;
                    var newName = "LexemeInput.Translations[" + index + "]";

                    input.attr("name", newName);
                    span.attr("data-valmsg-for", newName);

                    // Update the validation rules
                    validator.settings.rules[newName] = { required: true };
                    validator.settings.messages[newName] = { required: "The Translation field is required." };
                });
            };

            $("#tbbody").on('click', '.remove-translation', function () {
                $(this).closest('tr').remove();
                refreshIndexes();
            });

            $(".add-translation").click(function () {
                totalTranslations++;
                var translationRow = $("<tr>");

                var lexemeCell = $("<td>");

                var translationCell = $("<td>");

                var translationInput = $("<input>")
                    .attr("type", "text")
                    .attr("name", "LexemeInput.Translations[" + totalTranslations + "]")
                    .addClass("form-control small-input translations")
                    .attr("required", "required");

                // Add new field to the validator
                validator.settings.rules["LexemeInput.Translations[" + totalTranslations + "]"] = { required: true };
                validator.settings.messages["LexemeInput.Translations[" + totalTranslations + "]"] = { required: "The Translation field is required." };

                var translationValidation = $("<span>")
                    .addClass("text-danger field-validation-valid")
                    .attr("data-valmsg-for", "LexemeInput.Translations[" + totalTranslations + "]")
                    .attr("data-valmsg-replace", "true");

                translationCell.append(translationInput);
                translationCell.append(translationValidation);

                var actionCell = $("<td>");

                var translationButton = $("<button>")
                    .attr("type", "button")
                    .addClass("big-btn remove-translation")
                    .text("Delete");



                actionCell.append(translationButton);

                translationRow.append(lexemeCell);
                translationRow.append(translationCell);
                translationRow.append(actionCell);

                $("#tbbody").append(translationRow);
                refreshIndexes();
            });


            $("form").on('submit', function (e) {
                validator.resetForm();
                var isValid = validator.form();
                if (!isValid) {
                    e.preventDefault(); //cancel submission
                }
            });

        });

    </script>
}